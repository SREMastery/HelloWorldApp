trigger:
- master

pool: 
  name: 'Azure Pipelines'

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: Build and Test
  jobs:
  - job: Build
    displayName: Build Job
    steps:

    # Restore dependencies
    - task: DotNetCoreCLI@2
      displayName: 'Restore Dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    # Build the solution
    - task: DotNetCoreCLI@2
      displayName: 'Build Solution'
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration)'

    # Run unit tests
    - task: DotNetCoreCLI@2
      displayName: 'Run Unit Tests'
      inputs:
        command: 'test'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration) --no-build --verbosity normal'

    # Publish the application
    - task: DotNetCoreCLI@2
      displayName: 'Publish Artifacts'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'Drop'
        publishLocation: 'pipeline'

- stage: DeploytoDev
  displayName: Deploy to Dev
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Download Job
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'Drop'
        targetPath: '$(Pipeline.Workspace)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azconnection_through_MI'
        appType: 'webApp'
        WebAppName: 'my-app-qa'
        packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

- stage: DeploytoQA
  displayName: Deploy to QA
  dependsOn: DeploytoDev
  jobs:
  - job: Deploy
    displayName: Download Job
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'Drop'
        targetPath: '$(Pipeline.Workspace)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azconnection_through_MI'
        appType: 'webApp'
        WebAppName: 'my-app-testing'
        packageForLinux: '$(Pipeline.Workspace)/**/*.zip'